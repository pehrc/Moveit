{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Correia-PC/Documents/Projects/Moveit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Correia-PC\\\\Documents\\\\Projects\\\\Moveit\\\\src\\\\components\\\\CountDown.tsx\";\nimport styles from '../styles/components/Countdown.module.css';\nexport function CountDown() {\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1]; // o splite divide, ou seja * 25 = '2' '5'  && o padStart verifica se a string contém 2 caracteres, se nao, preencher a esquera com '0'\n\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountDown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountDown,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["C:/Users/Correia-PC/Documents/Projects/Moveit/src/components/CountDown.tsx"],"names":["styles","CountDown","String","minutes","padStart","split","minuteLeft","minuteRight","seconds","secondLeft","secondRight","countdownContainer","hasFinished","countdownButton","isActive","countdownButtonActive","resetCountDown","startCountDown"],"mappings":";;;;AAEA,OAAOA,MAAP,MAAmB,2CAAnB;AAGA,OAAO,SAASC,SAAT,GAAsB;AAAA,8BAEOC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,EAAxC,CAFP;AAAA;AAAA,MAEpBC,UAFoB;AAAA,MAERC,WAFQ,8BAEqD;;;AAFrD,+BAGOL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,EAAxC,CAHP;AAAA;AAAA,MAGpBI,UAHoB;AAAA,MAGRC,WAHQ;;AAK3B,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAaEE,WAAW,gBACX;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAEZ,MAAM,CAACa,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAKT;AAAA,gBACCC,QAAQ,gBAEL;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,YAAKd,MAAM,CAACa,eAAZ,cAA+Bb,MAAM,CAACe,qBAAtC,CAA/B;AAA8F,QAAA,OAAO,EAAEC,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK,gBAML;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEhB,MAAM,CAACa,eAAxC;AAAyD,QAAA,OAAO,EAAEI,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ,qBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;KA1CehB,S","sourcesContent":["import { useState, useEffect, useCallback, useContext } from 'react'\r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\nimport styles from '../styles/components/Countdown.module.css'\r\n\r\n\r\nexport function CountDown () {\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2 , '0').split('');  // o splite divide, ou seja * 25 = '2' '5'  && o padStart verifica se a string contém 2 caracteres, se nao, preencher a esquera com '0'\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2 , '0').split('');\r\n\r\n  return(\r\n    <div>\r\n    <div className={styles.countdownContainer}>\r\n      <div>\r\n        <span>{minuteLeft}</span>\r\n        <span>{minuteRight}</span>\r\n      </div>\r\n      <span>:</span>\r\n      <div>\r\n        <span>{secondLeft}</span>\r\n        <span>{secondRight}</span>\r\n      </div> \r\n    </div>\r\n\r\n    { hasFinished ?(\r\n      <button disabled className={styles.countdownButton}>\r\n      Ciclo encerrado\r\n    </button>\r\n    ):(\r\n        <>\r\n        {isActive ?\r\n          (\r\n            <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={resetCountDown}>\r\n              Abandonar ciclo\r\n            </button>\r\n          ):(\r\n            <button type=\"button\" className={styles.countdownButton} onClick={startCountDown}>\r\n              Iniciar ciclo \r\n            </button>\r\n          )\r\n        }\r\n        </> \r\n      ) \r\n    } \r\n         \r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}