{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Correia-PC\\\\Documents\\\\Projects\\\\Moveit\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useCallback, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    0: level,\n    1: setLevel\n  } = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const {\n    0: isLevelUpModalOpen,\n    1: setIsLevelUpModalOpen\n  } = useState(false);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n  const levelUp = useCallback(() => {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }, []);\n\n  function closeModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: `Valendo ${challenge.amount}XP!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenger() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      levelUp();\n      finalExperience = finalExperience - experienceToNextLevel;\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      experienceToNextLevel,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      completeChallenger,\n      closeModal\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Correia-PC/Documents/Projects/Moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useCallback","useState","useEffect","challenges","Cookies","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","closeModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenger","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, useCallback, useState, ReactNode, useEffect } from 'react';\r\nimport challenges from '../../challenges.json';\r\nimport Cookies from 'js-cookie'\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\n  \r\ninterface Challenge {\r\n  type: 'body' | 'eye';\r\n  description: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n  level: number;\r\n  challengesCompleted: number;\r\n  currentExperience: number;\r\n  activeChallenge: Challenge;\r\n  experienceToNextLevel: number;\r\n  levelUp: () => void;\r\n  startNewChallenge: () => void;\r\n  resetChallenge: () => void;\r\n  completeChallenger: () => void;\r\n}\r\n\r\n\r\ninterface ChallengensProviderProps{\r\n  children: ReactNode;\r\n  level: number;\r\n  currentExperience: number;\r\n  challengesCompleted: number;\r\n  closeModal: boolean\r\n}\r\n\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData)\r\n\r\nexport function ChallengesProvider({ children, ...rest }: ChallengensProviderProps){\r\n  const[level , setLevel] = useState(rest.level ?? 1);\r\n  const[currentExperience , setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n  const[challengesCompleted , setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n\r\n  const [activeChallenge, setActiveChallenge] = useState(null)\r\n  const [isLevelUpModalOpen , setIsLevelUpModalOpen] = useState(false)\r\n\r\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n\r\n  useEffect(() => {\r\n    Notification.requestPermission();\r\n  }, [])\r\n\r\n  useEffect(() =>{\r\n    Cookies.set('level', String(level))\r\n    Cookies.set('currentExperience', String(currentExperience))\r\n    Cookies.set('challengesCompleted', String(challengesCompleted))\r\n  },[level, currentExperience, challengesCompleted])\r\n\r\n   const levelUp = useCallback(() => {\r\n    setLevel(level + 1);\r\n    setIsLevelUpModalOpen(true);\r\n  },[])\r\n\r\n  function closeModal(){\r\n    setIsLevelUpModalOpen(false);\r\n  }\r\n\r\n  function startNewChallenge(){\r\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n    const challenge = challenges[randomChallengeIndex];\r\n\r\n    setActiveChallenge(challenge)\r\n\r\n    new Audio('/notification.mp3').play();\r\n\r\n    if(Notification.permission === 'granted'){\r\n      new Notification('Novo desafio',{\r\n        body:`Valendo ${challenge.amount}XP!` \r\n      })\r\n    }\r\n  }\r\n\r\n  function resetChallenge(){\r\n    setActiveChallenge(null);\r\n  }\r\n\r\n  function completeChallenger(){\r\n    if (!activeChallenge){\r\n      return;\r\n    }\r\n    const { amount } = activeChallenge;\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if(finalExperience >= experienceToNextLevel){\r\n      levelUp();\r\n      finalExperience = finalExperience - experienceToNextLevel;\r\n    }\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1)\r\n  }\r\n  \r\n  return(\r\n    <ChallengesContext.Provider value={{level, currentExperience, challengesCompleted, experienceToNextLevel, levelUp, startNewChallenge, activeChallenge, resetChallenge, completeChallenger, closeModal }}>\r\n    {children}\r\n    {isLevelUpModalOpen && <LevelUpModal/>}\r\n    </ChallengesContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}