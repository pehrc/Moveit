{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Correia-PC\\\\Documents\\\\Projects\\\\Moveit\\\\src\\\\components\\\\CountDown.tsx\";\nimport { useState, useEffect, useCallback, useContext } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function CountDown() {\n  const {\n    startNewChallenge\n  } = useContext(ChallengesContext);\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.1 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split(''); // o splite divide, ou seja * 25 = '2' '5'  && o padStart verifica se a string contém 2 caracteres, se nao, preencher a esquera com '0'\n\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n  const startCountDown = useCallback(() => {\n    setIsActive(true);\n  }, []);\n  const resetCountDown = useCallback(() => {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }, []);\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountDown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountDown,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Correia-PC/Documents/Projects/Moveit/src/components/CountDown.tsx"],"names":["useState","useEffect","useCallback","useContext","ChallengesContext","styles","countdownTimeout","CountDown","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountDown","resetCountDown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback, useContext } from 'react'\r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\nimport styles from '../styles/components/Countdown.module.css'\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function CountDown () {\r\n\r\n  const  { startNewChallenge } = useContext(ChallengesContext);\r\n\r\n  const [ time , setTime ] = useState(0.1 * 60)\r\n  const [ isActive, setIsActive ] = useState(false)\r\n  const [ hasFinished , setHasFinished] = useState(false)\r\n\r\n  const minutes = Math.floor(time / 60)\r\n  const seconds = time % 60;\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2 , '0').split('');  // o splite divide, ou seja * 25 = '2' '5'  && o padStart verifica se a string contém 2 caracteres, se nao, preencher a esquera com '0'\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2 , '0').split('');\r\n\r\n\r\n  const startCountDown = useCallback(() => {\r\n    setIsActive(true)\r\n  },[])\r\n\r\n  const resetCountDown = useCallback(() => {\r\n    clearTimeout(countdownTimeout)\r\n    setIsActive(false)\r\n    setTime(0.1 * 60)\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if(isActive && time > 0){\r\n      countdownTimeout = setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000)\r\n    } else if (isActive && time === 0) {\r\n      setHasFinished(true);\r\n      setIsActive(false);\r\n      startNewChallenge();\r\n    }\r\n  },[isActive , time])\r\n\r\n  return(\r\n    <div>\r\n    <div className={styles.countdownContainer}>\r\n      <div>\r\n        <span>{minuteLeft}</span>\r\n        <span>{minuteRight}</span>\r\n      </div>\r\n      <span>:</span>\r\n      <div>\r\n        <span>{secondLeft}</span>\r\n        <span>{secondRight}</span>\r\n      </div> \r\n    </div>\r\n\r\n    { hasFinished ?(\r\n      <button disabled className={styles.countdownButton}>\r\n      Ciclo encerrado\r\n    </button>\r\n    ):(\r\n        <>\r\n        {isActive ?\r\n          (\r\n            <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={resetCountDown}>\r\n              Abandonar ciclo\r\n            </button>\r\n          ):(\r\n            <button type=\"button\" className={styles.countdownButton} onClick={startCountDown}>\r\n              Iniciar ciclo \r\n            </button>\r\n          )\r\n        }\r\n        </> \r\n      ) \r\n    } \r\n         \r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}